// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swole.Data;

namespace Swole.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210303074514_AddGymMemberEntity")]
    partial class AddGymMemberEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Swole.Data.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Swole.Data.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("Swole.Data.GymEmployee", b =>
                {
                    b.Property<Guid>("GymId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("TEXT");

                    b.HasKey("GymId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MemberId");

                    b.ToTable("GymEmployee");
                });

            modelBuilder.Entity("Swole.Data.GymMember", b =>
                {
                    b.Property<Guid>("GymId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("TEXT");

                    b.HasKey("GymId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("GymMember");
                });

            modelBuilder.Entity("Swole.Data.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Swole.Data.GymEmployee", b =>
                {
                    b.HasOne("Swole.Data.Employee", "Employee")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swole.Data.Gym", "Gym")
                        .WithMany("Employees")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swole.Data.Member", null)
                        .WithMany("Employees")
                        .HasForeignKey("MemberId");

                    b.Navigation("Employee");

                    b.Navigation("Gym");
                });

            modelBuilder.Entity("Swole.Data.GymMember", b =>
                {
                    b.HasOne("Swole.Data.Gym", "Gym")
                        .WithMany("Members")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swole.Data.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gym");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Swole.Data.Employee", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Swole.Data.Gym", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Swole.Data.Member", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
